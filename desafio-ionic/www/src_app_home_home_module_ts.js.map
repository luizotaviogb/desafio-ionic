{"version":3,"file":"src_app_home_home_module_ts.js","mappings":"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","sources":["./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/home.page.ts","./src/app/models/patient.model.ts","./src/app/models/serializable.model.ts","./src/app/patient/patient.component.ts","./src/app/patient/patient.module.ts","./src/app/services/data.service.ts","./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { HomePage } from './home.page';\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { PatientComponentModule } from '../patient/patient.module';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PatientComponentModule,\n    HomePageRoutingModule,\n    Ng2SearchPipeModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Patient } from '../models/patient.model';\nimport { DataService } from '../services/data.service';\nimport { AlertController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit {\n  constructor(public dataService: DataService, public alertController: AlertController, private httpClient: HttpClient) {\n  }\n\n  public patients: Array<Patient> = []\n  public search: boolean = false\n  public searchValue: string\n  public loading: boolean = true\n  public skeletons: Array<Number> = Array(15).fill(15).map((x, i) => i)\n  public page: number = 1\n  public take: number = 50\n  public gender: string = null\n  public nat: string = null\n  public loadingPage: boolean = true\n  refresh(ev) {\n    setTimeout(() => {\n      ev.detail.complete()\n    }, 3000);\n  }\n\n  ngOnInit(): void {\n    this.getPatients()\n  }\n\n  ionViewDidEnter(){\n    setTimeout(() => {\n      this.loadingPage = false\n    }, 2000);\n  }\n\n  getPatients(ionRefresher: any = null, ionInfiniteScroll: any = null) {\n\n    if (ionRefresher !== null ||\n      (ionRefresher == null && ionInfiniteScroll == null) ||\n      this.searchValue\n    ) {\n      this.resetList();\n    }\n    this.dataService.getPatients(this.gender, this.nat).subscribe(response => {\n      this.patients = this.patients.concat(response['results'].map(patient => new Patient(patient)))\n      this.page++;\n\n      if (ionInfiniteScroll) {\n        ionInfiniteScroll.target.complete();\n      }\n\n      if (ionRefresher) {\n        ionRefresher.target.complete();\n      }\n\n      this.loading = false;\n\n      this.loading = false\n    });\n  }\n  resetList() {\n    this.patients = [];\n    this.page = 1;\n  }\n\n  async toggleSearch() {\n    const alert = await this.alertController.create({\n      header: 'Filters',\n      subHeader: 'Gender',\n      inputs: [\n        {\n          name: 'male',\n          type: 'radio',\n          label: 'Male',\n          value: 'male',\n          handler: () => {\n            this.gender = \"male\"\n          },\n        },\n        {\n          name: 'female',\n          type: 'radio',\n          label: 'Female',\n          value: 'female',\n          handler: () => {\n            this.gender = \"female\"\n          }\n        },\n        {\n          name: 'any',\n          type: 'radio',\n          label: 'Any',\n          value: 'Any',\n          handler: () => {\n            this.gender = \"\"\n          }\n        }\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {\n            this.gender = \"\"\n            console.log(this.gender)\n          }\n        }, {\n          text: 'Filter',\n          handler: () => {\n            this.loading = true\n            this.getPatients()\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  applySearch(event) {\n    var query = event.target.value.toLowerCase();\n    console.log(query)\n  }\n\n}","import { Serializable } from \"./serializable.model\"\n\nexport class Patient extends Serializable {\n    public gender: string = null\n    public name: any = null\n    public location: any = null\n    public email: string = null\n    public dob: any = null\n    public phone: any = null\n    public id: any = null\n    public picture: any = null\n    public nat: string = null\n    public fullName: string = null\n    \n    constructor(data: any = {}) {\n        super();\n        this.serialize(data);\n    }\n}","export class Serializable {\n\n    public id: any;\n\n    constructor() {}\n\n    serialize(data: Object = {}, include_null_values: boolean = false) {\n        var keys: Array<string> = Object.keys(data);\n        \n        keys.forEach (property => {\n            if (include_null_values) {\n                if (data[property] === undefined) {\n                    return;\n                }\n            } else {\n                if (data[property] === null || data[property] === undefined) {\n                    return;\n                }\n            }\n\n            if (this.propertyIsDeclared(property)) {\n                if (this.relationshipExists(property)) {\n                    this.setRelationship(property, data[property]);\n                } else {\n                    this.set(property, data[property]);\n                }\n            }\n\n        }, this);\n    }\n\n    propertyIsDeclared(property: string) {\n        return !!Object.getOwnPropertyDescriptor(this, property);\n    }\n\n    relationshipExists(property: string) {\n        return (Object.keys(this.relationships).indexOf(property) > -1) && (this.relationships[property] !== null);\n    }\n\n    set(property: string, value: any) {\n        this[property] = value;\n    }\n\n    setRelationship(property: string, value: any) {\n\n        var constructor = this.relationships[property];\n\n        if (Array.isArray(value)) {\n            this[property] = value.map ( item => new constructor(item) );\n        } else {\n            this[property] = new constructor(value);\n        }\n    }\n\n    /**\n     * Define o tipo de propriedades que devem ser serializadas \n     * recursivamente, segundo exemplo:\n     * \n     * user: User\n     * \n     * A propriedade \"user\" será usada para instanciar uma nova classe \"User\".\n     * \n     * @return Object\n     */\n    get relationships(): Object {\n        return {};\n    }\n\n    /**\n     * Retorna dados que serão enviados para o servidor \n     * a fim de persistência no banco de dados\n     * \n     * @return Object\n     */\n    get http_data(): Object {\n        return {};\n    }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { Patient } from '../models/patient.model';\nimport { ViewPatientPage } from '../view-patient/view-patient.page';\nimport { DateTime } from 'luxon';\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.scss'],\n})\nexport class PatientComponent implements OnInit {\n  @Input() patient: Patient;\n  public name: any = null\n  public formattedDate: any = null\n  constructor(public modalController: ModalController) { }\n\n  ngOnInit() {\n    this.formattedDate = DateTime.fromISO(this.patient.dob.date).toLocaleString(DateTime.DATE_SHORT)\n    this.patient.fullName = this.patient.name.first + \" \" + this.patient.name.last\n  }\n\n  isIos() {\n    const win = window as any;\n    return win && win.Ionic && win.Ionic.mode === 'ios';\n  }\n\n  async showPatientProfile(patient: Patient) {\n    const modal = await this.modalController.create({\n      component: ViewPatientPage,\n      componentProps: {\n        patient: patient\n      },\n      breakpoints: [0, 0.2, 0.5, 1],\n      initialBreakpoint: 0.8,\n    });\n    await modal.present();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { PatientComponent } from './patient.component';\n\n@NgModule({\n  imports: [ CommonModule, FormsModule, IonicModule, RouterModule],\n  declarations: [PatientComponent],\n  exports: [PatientComponent]\n})\nexport class PatientComponentModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Patient } from '../models/patient.model';\nexport interface Message {\n  fromName: string;\n  subject: string;\n  date: string;\n  id: number;\n  read: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  protected http: HttpClient;\n\n  constructor(private httpClient: HttpClient) { }\n\n  getPatients(gender: string = null, nat: string = null): Observable<Patient[]> {\n    return this.httpClient.get<Patient[]>('https://randomuser.me/api?results=50&' + \"gender=\" + gender + \"&nat=\" + nat)\n      .pipe();\n  }\n}","import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵfac = function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); };\nNg2SearchPipeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n"],"names":[],"sourceRoot":"webpack:///"}